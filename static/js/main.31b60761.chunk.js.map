{"version":3,"sources":["logo.svg","components/Fullpage.js","sections/Titlesection.js","sections/Aboutsection.js","components/Skillcard.js","sections/Skillsection.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Fullpage","children","this","props","react_default","a","createElement","className","concat","style","background","bgcolor","Component","Titlesection","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","components_Fullpage","color","data","title","subtitle","keys","links","map","key","react_social_icons","url","Aboutsection","modules","name","sections","items","content","Skillcard","skill","src","image","Skillsection","eachskill","components_Skillcard","Navigation","activeClass","to","spy","smooth","offset","duration","delay","href","App","_this","changeColor","zamine","state","counter","setState","background_first","background_second","background_third","lib_default","src_components_Navigation","onClick","alt","src_sections_Titlesection","src_sections_Aboutsection","src_sections_Skillsection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31b60761.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport \"./fullpage.css\";\r\nclass Fullpage extends Component {\r\n  render() {\r\n      const {children}=this.props\r\n    return (\r\n        <div className={`fullpage ${this.props.className || ''}`} style={{background: this.props.bgcolor}}  >\r\n        \r\n{children}\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullpage;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport Fullpage from \"../components/Fullpage\"\r\nimport \"./Titlesection.css\"\r\nclass Titlesection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      \r\n        <Fullpage className=\"first\" bgcolor={this.props.bgcolor}>\r\n          <h1 className=\"title\" style={{color:this.props.color}}\r\n           >\r\n          {data.title}</h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map(key => {\r\n              return <SocialIcon url={data.links[key]} />;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default Titlesection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport \"./Aboutsection.css\"\r\nimport { Link, Element } from \"react-scroll\";\r\nclass Aboutsection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"Aboutus\" className=\"element\" />\r\n      <Fullpage className=\"second\" bgcolor={this.props.bgcolor}>\r\n        <h3>{data.sections[0].title}</h3>\r\n        <p>{data.sections[0].items[0].content}</p>\r\n      </Fullpage>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Aboutsection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport \"./SkillCard.css\";\r\nclass Skillcard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image}  />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skillcard;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport Skillcard from \"../components/Skillcard\";\r\nimport \"./Skillsection.css\"\r\nimport { Link, Element } from \"react-scroll\";\r\nclass Skillsection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Element name=\"Skills\" className=\"element\" />\r\n      <Fullpage className=\"third\" bgcolor={this.props.bgcolor}>\r\n        <h3>{data.sections[1].title}</h3>\r\n\r\n        <div className=\"cards-wrapper\">\r\n          {data.sections[1].items.map(eachskill => {\r\n            return (\r\n              <Skillcard skill={eachskill} />\r\n              \r\n            );\r\n          })}\r\n        </div>\r\n      </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skillsection;\r\n","import React, { Component } from \"react\";\nimport { Link, Element } from \"react-scroll\";\nimport \"./Navigation.css\";\nclass Navigation extends Component {\n  render() {\n    return (\n      <div className=\"navbar\" style={{ background: \"transparent\" }}>\n        <Link\n          activeClass=\"active\"\n          to=\"Aboutus\"\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n          delay={0}\n        >\n          <a href=\"\">About</a>\n        </Link>\n        <Link\n          activeClass=\"active\"\n          to=\"Skills\"\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n        >\n        <a href=\"\">Skills</a>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport data from \"./data.json\";\nimport { SIGKILL } from \"constants\";\nimport Fullpage from \"./components/Fullpage\";\nimport Titlesection from \"./sections/Titlesection\";\nimport Aboutsection from \"./sections/Aboutsection\";\nimport Skillsection from \"./sections/Skillsection\";\nimport SnowStorm from \"react-snowstorm\";\nimport snowstorm from \"react-snowstorm/lib/snowstorm\";\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\"\n\nimport * as Scroll from \"react-scroll\";\nimport { Link, Element } from \"react-scroll\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      background_first: \"white\",\n      background_second: \"white\",\n      background_third: \"white\",\n      counter: 0\n    };\n  }\n  changeColor = () => {\n    let zamine = [\"green\", \"yellow\", \"blue\", \"pink\"];\n    \n    if (this.state.counter > 3) {\n      this.setState({\n        counter: 0,\n        background_first:zamine[this.state.counter],\n        background_second:zamine[this.state.counter],\n        background_third: zamine[this.state.counter]\n      });\n    } else\n      this.setState({\n        background_first: zamine[this.state.counter],\n        background_second: zamine[this.state.counter],\n        background_third: zamine[this.state.counter],\n        counter: this.state.counter + 1\n      });\n      \n  };\n\n  render(){\n  return (\n    <div className=\"App\">\n      <SnowStorm />\n      <Navigation />\n      <div className=\"changetheme\">\n      <img onClick={this.changeColor} src=\"images/color.png\" alt=\"\" />\n      </div>\n      <Titlesection bgcolor={this.state.background_first}/>\n\n      <Aboutsection bgcolor={this.state.background_second}/>\n\n      <Skillsection bgcolor={this.state.background_third} />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}